    /*
    while (sBody >> word)
    {
        if (isType(word)) {
            sBody >> word;
            if (!word.empty()) {
                auto functionStart = word.find('(');
                if (functionStart != std::string::npos) {
                    std::string methodName = word.substr(0, functionStart);
                    while (sBody >> word)
                    {
                        if (word.find(')') != std::string::npos) {
                            
                            break;
                        }
                    }
                } else {
                    isKeyword(word) ? throw ErrorMessage("Variable can not have name of keyword!\n")
                                : ++propertyCount;
                }
            }
            else {
                break;
            }
        }
    }
    */
    //std::cout << "Member functions: " << functionCount << std::endl;    
